
@model Alborz.DomainLayer.DTO.ColorDTO
@using PagedList.Mvc;
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<link href="~/css/styles.css" rel="stylesheet" />
@*<link href="~/css/css/styles.css" rel="stylesheet" />*@
@{
      ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var counter = 1;
}

<h2 class="style-h2">رنگ محصولات</h2>

<button type="button" onclick="location.href='@Url.Action("create")';return false;" class="btn btn-primary">رنگ جدید</button>

@using (Html.BeginForm("Index", "Color", FormMethod.Get))
{
    <p class="search_table">
        جستجو در جدول:
        @*@Html.TextBox("SearchString", ViewBag.CurrentFilter as string)*@
        @Html.TextBoxFor(model => model.CurrentFilter)
        @Html.ValidationMessageFor(model => model.CurrentFilter, "", new { @class = "text-danger" })
        <input type="submit" value="جستجو" />
        <input type="button" value="حذف فیلتر" onclick="location.href='@Url.Action("index")';return false;">

    </p>
}
<table id="showList">
    <tr>
        <th>
            ردیف
        </th> 
        <th>
            @Html.ActionLink("عنوان", "Index", new { sortOrder = ViewBag.Title, currentFilter = Model.CurrentFilter })
        </th>
        <th>
            عملیات
        </th>
    </tr>

    @foreach (var item in Model.ColorPageList)
    {
        <tr>
            <td>
                @counter
            </td> 
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            
            <td>
                @Html.ActionLink("ویرایش", "Edit", new { id = item.Id }) 
                @*@Html.ActionLink("جزئیات", "Details", new { id = item.Id }) |*@ 
                @*@Html.ActionLink("حذف", "Delete", new { id = item.DriverId })*@
            </td>
        </tr>
        counter += 1;

    }

</table>
<br />
<p class="showPage">
    صفحه @(Model.ColorPageList.PageCount < Model.ColorPageList.PageNumber ? 0 : Model.ColorPageList.PageNumber) از @Model.ColorPageList.PageCount
</p>

@Html.PagedListPager(Model.ColorPageList, page => Url.Action("Index",
    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

